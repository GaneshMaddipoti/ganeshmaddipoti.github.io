[{"id":"Text-1759419411470","text":"Scala","x":178,"y":105,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Note-1759419418140","text":"Introduction\n1. Scala was created by Martin Odersky at (EPFL) in Switzerland. \n2. The design work began in 2001, and it was first released publicly in early 2004.\n3. The primary motivation behind Scala was to create a language that synthesised the best features of Object-Oriented Programming and Functional Programming.\n4. A crucial strategic decision was to have Scala run on the Java Virtual Machine (JVM), giving it access to the vast ecosystem of Java libraries and code spaces.\n5. Scala's design philosophy is to be concise, elegant, and type-safe.\n\nMain Features\n1. Hybrid Object-Oriented and Functional Paradigm\n2. Statically Typed with Type Inference\n3. Concise and Expressive Syntax\n4. Immutability by Default (val over var, and immutable data structures)\n5. JVM Interoperability\n6. Powerful Concurrency and Parallelism (Futures, Promises, and Akka toolkit)\n7. Advanced Type System(Traits) and Pattern Matching\n\nIn essence, Scala is a mature, high-level language designed for building robust, scalable software. \nIt has found its niche in big data processing (Apache Spark is written in Scala), web services, and building highly concurrent, reactive systems.","x":183,"y":170,"width":1059.890625,"height":408.890625,"bgColor":"wheat"},{"id":"Container-1759521993942","elements":[{"id":"Container-1759419987609","elements":[{"id":"Node-1759420005670","text":"Script","x":58,"y":154,"width":99.890625,"height":30,"bgColor":"#F0F0F0"},{"id":"Node-1759420012360","text":"Program","x":53,"y":54,"width":99.890625,"height":30,"bgColor":"#F0F0F0"},{"id":"Node-1759420020002","text":"scalac","x":199,"y":55,"width":99.890625,"height":30,"bgColor":"#F0F0F0"},{"id":"Node-1759420027498","text":"scala","x":495,"y":105,"width":99.890625,"height":30,"bgColor":"#F0F0F0"},{"id":"Node-1759420041178","text":"Byte Code","x":338,"y":51,"width":94.921875,"height":32.859375,"bgColor":"#F0F0F0"},{"id":"Node-1759420059453","text":"Machine Code","x":677,"y":109,"width":115.828125,"height":30,"bgColor":"#F0F0F0"}],"x":45,"y":203,"width":820.921875,"height":202.96875,"bgColor":"#F0F0F0"},{"id":"Text-1759519286933","text":"Execution Model","x":8,"y":7,"width":163.921875,"height":28.921875,"bgColor":"#E0E0E0"},{"id":"Container-1759522452352","elements":[{"id":"Text-1759420217979","text":"Program","x":9,"y":3,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759502663688","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">HelloWorld</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">main</span></span>(args: <span class=\"hljs-type\">Array</span>[<span class=\"hljs-type\">String</span>]): <span class=\"hljs-type\">Unit</span> = {\n    println(<span class=\"hljs-string\">\"Hello from a Scala program!\"</span>)\n\n    <span class=\"hljs-keyword\">val</span> x = <span class=\"hljs-number\">5</span>\n    <span class=\"hljs-keyword\">val</span> y = <span class=\"hljs-number\">10</span>\n    println(<span class=\"hljs-string\">s\"Sum: <span class=\"hljs-subst\">${x + y}</span>\"</span>)\n  }\n}\n<span class=\"hljs-comment\">// need object with main method</span>\n<span class=\"hljs-comment\">// need to compile first with scalac, then run by scala\n// need to save the file with .scala extension</span></code></pre>","x":16,"y":46,"width":681.890625,"height":305.953125,"bgColor":"#555"}],"x":704,"y":434,"width":714.9375,"height":367.96875,"bgColor":"#F0F0F0"},{"id":"Container-1759522476046","elements":[{"id":"Text-1759420211522","text":"Script","x":-1,"y":1,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759492292870","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\">println(<span class=\"hljs-string\">\"Hello from a Scala script!\"</span>)\n\n<span class=\"hljs-keyword\">val</span> x = <span class=\"hljs-number\">5</span>\n<span class=\"hljs-keyword\">val</span> y = <span class=\"hljs-number\">10</span>\nprintln(<span class=\"hljs-string\">s\"Sum: <span class=\"hljs-subst\">${x + y}</span>\"</span>)\n\n<span class=\"hljs-comment\">// no need of object, main</span>\n<span class=\"hljs-comment\">// can run directly by scala\n// need to save the file with .sc extension</span></code></pre>","x":18,"y":43,"width":522,"height":246.984375,"bgColor":"#555"}],"x":41,"y":437,"width":553.96875,"height":301.96875,"bgColor":"#F0F0F0"},{"id":"Note-1759527577418","text":"1. Install Java Development Kit (JDK)<div>2. Install Scala</div><div>3. Install Sbt</div><div>4. Can use REPL or application to run code</div>","x":40,"y":64.25,"width":534,"height":111.984375,"bgColor":"wheat"},{"id":"Code-1759527591495","text":"<pre><span style=\"color: rgb(201, 209, 217);\">$ java -version\n$ scala --version\n$ sbt --version</span></pre>","x":601,"y":65.25,"width":262.96875,"height":118.96875,"bgColor":"#555"}],"x":180,"y":612,"width":1462.96875,"height":819.984375,"bgColor":"#F0F0F0"},{"id":"Container-1759522645983","elements":[{"id":"Text-1759519707068","text":"Syntax","x":5,"y":3,"width":102.890625,"height":32.953125,"bgColor":"#E0E0E0"},{"id":"Container-1759521112112","elements":[{"id":"Text-1759419530916","text":"Variables","x":4,"y":4,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759502773488","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">// Variables are used to store data.</span>\n<span class=\"hljs-keyword\">val</span> name: <span class=\"hljs-type\">String</span> = <span class=\"hljs-string\">\"Alice\"</span>  <span class=\"hljs-comment\">// Immutable</span>\n<span class=\"hljs-keyword\">var</span> age: <span class=\"hljs-type\">Int</span> = <span class=\"hljs-number\">30</span>           <span class=\"hljs-comment\">// Mutable</span>\n\n<span class=\"hljs-comment\">// Type can be inferred by compiler, so we can omit</span>\n<span class=\"hljs-keyword\">val</span> city = <span class=\"hljs-string\">\"Edinburgh\"</span>  <span class=\"hljs-comment\">// Scala infers it's a String</span>\n<span class=\"hljs-keyword\">var</span> score = <span class=\"hljs-number\">95</span>          <span class=\"hljs-comment\">// Scala infers it's an Int</span></code></pre>","x":8,"y":62,"width":594.9375,"height":206.953125,"bgColor":"#555"}],"x":50,"y":50,"width":616.921875,"height":289.921875,"bgColor":"#F0F0F0"},{"id":"Container-1759522560200","elements":[{"id":"Text-1759420420025","text":"Conditions","x":5,"y":6,"width":109.921875,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759503139925","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">// Using if else </span>\n<span class=\"hljs-keyword\">val</span> status = <span class=\"hljs-keyword\">if</span> (age &gt;= <span class=\"hljs-number\">18</span>) <span class=\"hljs-string\">\"Adult\"</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">\"Minor\"</span>\n\n<span class=\"hljs-comment\">// Pattern Matching</span>\n<span class=\"hljs-keyword\">val</span> day = <span class=\"hljs-string\">\"Monday\"</span>\n<span class=\"hljs-keyword\">val</span> activity = day <span class=\"hljs-keyword\">match</span> {\n  <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Monday\"</span>    =&gt; <span class=\"hljs-string\">\"Work\"</span>\n  <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Saturday\"</span>  =&gt; <span class=\"hljs-string\">\"Relax\"</span>\n  <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Sunday\"</span>    =&gt; <span class=\"hljs-string\">\"Family time\"</span>\n  <span class=\"hljs-keyword\">case</span> _           =&gt; <span class=\"hljs-string\">\"Unknown\"</span>\n}</code></pre>","x":13,"y":41,"width":597.890625,"height":305.859375,"bgColor":"#555"}],"x":691,"y":175,"width":628.921875,"height":358.921875,"bgColor":"#F0F0F0"},{"id":"Container-1759522605376","elements":[{"id":"Text-1759504436630","text":"Exception Handling","x":7,"y":2,"width":211.875,"height":28.921875,"bgColor":"#E0E0E0"},{"id":"Code-1759504587334","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-comment\">// risky code</span>\n} <span class=\"hljs-keyword\">catch</span> {\n  <span class=\"hljs-keyword\">case</span> e: <span class=\"hljs-type\">Exception</span> =&gt; println(<span class=\"hljs-string\">\"Caught exception\"</span>)\n} <span class=\"hljs-keyword\">finally</span> {\n  println(<span class=\"hljs-string\">\"Always executed\"</span>)\n}\n\n<span class=\"hljs-comment\">// can throw exceptions</span>\n<span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">ArithmeticException</span>(<span class=\"hljs-string\">\"Division by zero\"</span>)\n\n// Scala encourages functional style here\n\ndef divide(a: Int, b: Int): Try[Int] = Try(a / b)\n\nval result = divide(10, 0) match {\n  case Success(value) =&gt; value\n  case Failure(e) =&gt; println(s\"Failed with ${e.getMessage}\")\n}\n\n</code></pre>","x":18,"y":40,"width":756.890625,"height":459.890625,"bgColor":"#555"}],"x":1852,"y":103,"width":793.96875,"height":516.984375,"bgColor":"#F0F0F0"},{"id":"Container-1759522579303","elements":[{"id":"Text-1759420668680","text":"Loops","x":4,"y":3,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759504071922","text":"<pre>// for loop\nfor (i &lt;- 1 to 5) {\n  println(s\"Iteration $i\")\n}\n\n// while loop \nvar i = 0\nwhile (i &lt; 5) {\n  println(s\"i = $i\")\n  i += 1\n}\n\n// do-while loop\nvar i = 0\ndo {\n  println(s\"i = $i\")\n  i += 1\n} while (i &lt; 5)</pre>","x":10,"y":39,"width":439.921875,"height":451.875,"bgColor":"#555"}],"x":1352,"y":123,"width":465,"height":501.9375,"bgColor":"#F0F0F0"},{"id":"Container-1759527868635","elements":[{"id":"Text-1759527864078","text":"Data Types","x":3,"y":3,"width":127.96875,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759528034074","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-keyword\">val</span> b: <span class=\"hljs-type\">Byte</span> = <span class=\"hljs-number\">1                 // 1 byte</span>\n<span class=\"hljs-keyword\">val</span> s: <span class=\"hljs-type\">Short</span> = <span class=\"hljs-number\">100              // 2 bytes </span>\n<span class=\"hljs-keyword\">val</span> i: <span class=\"hljs-type\">Int</span> = <span class=\"hljs-number\">0                  // 4 bytes</span>\n<span class=\"hljs-keyword\">val</span> l: <span class=\"hljs-type\">Long</span> = <span class=\"hljs-number\">123456789</span>L        // 8 bytes\n<span class=\"hljs-keyword\">val</span> f: <span class=\"hljs-type\">Float</span> = <span class=\"hljs-number\">3.14</span>f            // 4 bytes  \n<span class=\"hljs-keyword\">val</span> d: <span class=\"hljs-type\">Double</span> = <span class=\"hljs-number\">2.71828         // 8 bytes</span>\n<span class=\"hljs-keyword\">val</span> c: <span class=\"hljs-type\">Char</span> = '<span class=\"hljs-type\">A</span>'               // 2 bytes\n<span class=\"hljs-keyword\">val</span> str: <span class=\"hljs-type\">String</span> = <span class=\"hljs-string\">\"Hello, Scala\" </span>\n<span class=\"hljs-keyword\">val</span> bool: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-keyword\">val</span> u: <span class=\"hljs-type\">Unit</span> = ()\n<span class=\"hljs-keyword\">val</span> bi: <span class=\"hljs-type\">BigInt</span> = <span class=\"hljs-type\">BigInt</span>(<span class=\"hljs-string\">\"12345678901234567890\"</span>)\n<span class=\"hljs-keyword\">val</span> bd: <span class=\"hljs-type\">BigDecimal</span> = <span class=\"hljs-type\">BigDecimal</span>(<span class=\"hljs-string\">\"12345.6789\"</span>)\n</code></pre>","x":18,"y":54,"width":561,"height":321.984375,"bgColor":"#555"}],"x":48,"y":374.5,"width":592.96875,"height":388.96875,"bgColor":"#F0F0F0"}],"x":159,"y":1490,"width":2674.96875,"height":786,"bgColor":"#F0F0F0"},{"id":"Container-1759523619811","elements":[{"id":"Text-1759420860210","text":"Object Orientation","x":4,"y":7,"width":220.828125,"height":33.890625,"bgColor":"#E0E0E0"},{"id":"Container-1759523631756","elements":[{"id":"Text-1759519884893","text":"Case Class","x":17,"y":4,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759505985640","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\">// <span class=\"hljs-keyword\">case</span> classes to hold data objects\n// inbuilt getter/setter, equals, hashCode, toString\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Book</span>(<span class=\"hljs-params\">title: <span class=\"hljs-type\">String</span>, author: <span class=\"hljs-type\">String</span></span>)</span>\n\n<span class=\"hljs-keyword\">val</span> b = <span class=\"hljs-type\">Book</span>(<span class=\"hljs-string\">\"1984\"</span>, <span class=\"hljs-string\">\"George Orwell\"</span>)\nprintln(b.title)\n</code></pre>","x":17,"y":40,"width":639.890625,"height":208.921875,"bgColor":"#555"}],"x":604,"y":542,"width":669.984375,"height":261.984375,"bgColor":"#F0F0F0"},{"id":"Container-1759523666231","elements":[{"id":"Text-1759519873598","text":"Object","x":3,"y":4,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759506000315","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\">// <span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">to</span> <span class=\"hljs-title\">have</span> <span class=\"hljs-title\">single</span> <span class=\"hljs-title\">instance</span> </span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">HelloWorld</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">main</span></span>(args: <span class=\"hljs-type\">Array</span>[<span class=\"hljs-type\">String</span>]): <span class=\"hljs-type\">Unit</span> = {\n    println(<span class=\"hljs-string\">\"Hello from Scala object!\"</span>)\n  }\n}\n</code></pre>","x":13,"y":40,"width":499.921875,"height":206.953125,"bgColor":"#555"}],"x":40,"y":551,"width":526.96875,"height":264,"bgColor":"#F0F0F0"},{"id":"Container-1759523704031","elements":[{"id":"Text-1759519854949","text":"Trait","x":4,"y":5,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759505869420","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">// traits to define behaviour</span>\n<span class=\"hljs-comment\">// Use a trait when you want to define shared behaviour </span>\n// that can be mixed into multiple unrelated classes.\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">trait</span> <span class=\"hljs-title\">Switchable</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">turnOn</span></span>(): <span class=\"hljs-type\">Unit</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">turnOff</span></span>(): <span class=\"hljs-type\">Unit</span>\n}\n\n</code></pre>","x":16,"y":37,"width":627,"height":217.96875,"bgColor":"#555"}],"x":1609,"y":24,"width":661.96875,"height":276,"bgColor":"#F0F0F0"},{"id":"Container-1759523732263","elements":[{"id":"Text-1759519835818","text":"Abstract Class","x":2,"y":7,"width":161.953125,"height":28.921875,"bgColor":"#E0E0E0"},{"id":"Code-1759505920640","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">// abstract class to define abstract structure and behaviour </span>\n<span class=\"hljs-comment\">// Use an abstract class when you want to define a base class </span>\n<span class=\"hljs-comment\">// with some implemented logic and some abstract methods.</span>\n<span class=\"hljs-comment\">// in case of needing construction parameters</span>\n\n<span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SmartDevice</span>(<span class=\"hljs-params\">val name: <span class=\"hljs-type\">String</span></span>) \n<span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Switchable</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">status</span></span>(): <span class=\"hljs-type\">String</span>  <span class=\"hljs-comment\">// abstract method</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">info</span></span>(): <span class=\"hljs-type\">Unit</span> = {\n    println(<span class=\"hljs-string\">s\"Device: <span class=\"hljs-subst\">$name</span>, Status: <span class=\"hljs-subst\">${status()}</span>\"</span>)\n  }\n}\n</code></pre>","x":16,"y":43,"width":754.921875,"height":348.890625,"bgColor":"#555"}],"x":778,"y":33,"width":786.984375,"height":403.96875,"bgColor":"#F0F0F0"},{"id":"Container-1759523761337","elements":[{"id":"Text-1759519825021","text":"Class","x":5,"y":8,"width":99.890625,"height":30,"bgColor":"#E0E0E0"},{"id":"Code-1759505957894","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-comment\">// class to define objects structure and behaviour</span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SmartLight</span>(<span class=\"hljs-params\">name: <span class=\"hljs-type\">String</span>, var isOn: <span class=\"hljs-type\">Boolean</span> = false</span>) \n<span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">SmartDevice</span>(<span class=\"hljs-params\">name</span>) </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">turnOn</span></span>(): <span class=\"hljs-type\">Unit</span> = isOn = <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">turnOff</span></span>(): <span class=\"hljs-type\">Unit</span> = isOn = <span class=\"hljs-literal\">false</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">status</span></span>(): <span class=\"hljs-type\">String</span> = <span class=\"hljs-keyword\">if</span> (isOn) <span class=\"hljs-string\">\"On\"</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">\"Off\"</span>\n}\n\n<span class=\"hljs-comment\">// companion object</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">SmartLight</span> </span>{\n  <span class=\"hljs-comment\">// Factory method</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">apply</span></span>(name: <span class=\"hljs-type\">String</span>): <span class=\"hljs-type\">SmartLight</span> = \n<span class=\"hljs-keyword\">     new</span> <span class=\"hljs-type\">SmartLight</span>(name)\n}\n</code></pre>","x":18,"y":48,"width":664.921875,"height":378.890625,"bgColor":"#555"}],"x":31,"y":57,"width":703.96875,"height":441.984375,"bgColor":"#F0F0F0"}],"x":144.5,"y":3319.75,"width":2302.96875,"height":841.96875,"bgColor":"#F0F0F0"},{"id":"Container-1759528975558","elements":[{"id":"Text-1759528979061","text":"Functions","x":7,"y":7,"width":99.984375,"height":30,"bgColor":"#E0E0E0"},{"id":"Note-1759529007263","text":"<div>Repetative code can be wrapped into a function.</div>\nScala functions are first-class citizens, meaning they can be assigned to variables, passed as arguments, and returned from other functions.","x":26,"y":52,"width":792,"height":90.984375,"bgColor":"wheat"},{"id":"Code-1759529052846","text":"<pre><code class=\"language-scala hljs\" data-highlighted=\"yes\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">add</span></span>(x: <span class=\"hljs-type\">Int</span>, y: <span class=\"hljs-type\">Int</span>): <span class=\"hljs-type\">Int</span> = {\n  x + y\n}\n\n// functions with side effects - print, write to file, interacting with ext.systems\ndef logMessage(msg: String): Unit = {\n  println(s\"LOG: $msg\")\n}\n\n<span class=\"hljs-comment\">// functions without parameters</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">greet</span></span>(): <span class=\"hljs-type\">String</span> = <span class=\"hljs-string\">\"Hello, Scala!\"</span>\n\n<span class=\"hljs-comment\">// fucntions with default parameters</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">greet</span></span>(name: <span class=\"hljs-type\">String</span> = <span class=\"hljs-string\">\"Guest\"</span>): <span class=\"hljs-type\">String</span> = <span class=\"hljs-string\">s\"Hello, <span class=\"hljs-subst\">$name</span>!\"</span>\n\n<span class=\"hljs-comment\">// single line functions</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">square</span></span>(x: <span class=\"hljs-type\">Int</span>): <span class=\"hljs-type\">Int</span> = x * x\n\n<span class=\"hljs-comment\">// Anonymous function (lambda)</span>\n<span class=\"hljs-keyword\">val</span> multiply = (x: <span class=\"hljs-type\">Int</span>, y: <span class=\"hljs-type\">Int</span>) =&gt; x * y\n\n<span class=\"hljs-comment\">// higer order functions</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">applyTwice</span></span>(f: <span class=\"hljs-type\">Int</span> =&gt; <span class=\"hljs-type\">Int</span>, x: <span class=\"hljs-type\">Int</span>): <span class=\"hljs-type\">Int</span> = f(f(x))\n\n<span class=\"hljs-comment\">// curried functions</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">multiply</span></span>(x: <span class=\"hljs-type\">Int</span>)(y: <span class=\"hljs-type\">Int</span>): <span class=\"hljs-type\">Int</span> = x * y\n<span class=\"hljs-keyword\">val</span> timesTwo = multiply(<span class=\"hljs-number\">2</span>) _  <span class=\"hljs-comment\">// Partially applied</span>\n</code></pre>","x":26,"y":163,"width":999,"height":708,"bgColor":"#555"}],"x":153,"y":2371,"width":1248.984375,"height":913.984375,"bgColor":"#F0F0F0"},{"id":"Path-1759420088072","text":"*","sElement":"Node-1759420012360","eElement":"Node-1759420020002"},{"id":"Path-1759420089944","text":"*","sElement":"Node-1759420020002","eElement":"Node-1759420041178"},{"id":"Path-1759420094837","text":"*","sElement":"Node-1759420027498","eElement":"Node-1759420059453"},{"id":"Path-1759420097130","text":"*","sElement":"Node-1759420005670","eElement":"Node-1759420027498"},{"id":"Path-1759522390256","text":"*","sElement":"Node-1759420041178","eElement":"Node-1759420027498"}]